library(readr)
library(tidyverse)
library(rstatix)
library(knitr)
install.packages("chisq.posthoc.test")
library(chisq.posthoc.test)

# Creating vector of columns to import from the dataset
cols <- c("SERIALNO", "RT", "SPORDER", "PUMA", "AGEP", "SCHL", "SCH", "RAC1P", "ENG", "PINCP", "ADJINC", "WAGP", "NWLA", "SEX", "CIT", "ST", "DIVISION", "REGION", "COW", "FER", "HINS1", "HINS2", "JWMNP", "MAR", "ESR", "WKHP", "PWGTP")

# Reading in the data using read_csv
df1 <- read_csv("psam_pusa.csv", col_types = cols(SERIALNO = col_character(), ST = col_number()))
df2 <- read_csv("psam_pusb.csv", col_types = cols(SERIALNO = col_character()))
df3 <- read_csv("psam_pusc.csv", col_types = cols(SERIALNO = col_character()))
df4 <- read_csv("psam_pusd.csv", col_types = cols(SERIALNO = col_character()))

# Filtering datasets using cols vector to keep necessary variables
df1 <- df1 %>%
  select(cols)
df2 <- df2 %>%
  select(cols)
df3 <- df3 %>%
  select(cols)
df4 <- df4 %>%
  select(cols)

# Binding all 4 datasets 
df <- bind_rows(df1, df2, df3, df4)
load("dfbeforeallchangeswith2new.RData")
# Renaming columns
names(df) <- c("SERIALNO", "Record_type", "Person_number", "PUMA", "Age", "Education", "School_enrollment", "Race", "Speaks_english", "Total_income", "Income_adjustment", "Income_12_months", "Layoff", "Sex", "Citizenship", "State", "USA_region9", "Region5", "Worker_class", "Birth_12months", "Insurance_co", "Insurance_dir", "Commute_time", "Married", "Employment_status", "Hours_worked", "Person_weights")

# Save the df
save(df, file = "Projectdf.RData")
# This is df without factors
load("Projectdf.RData")

# Changing columns to factors 

df$Sex <- factor(df$Sex, levels = c(1,2), labels = c("Male", "Female"))

# NA = Less than 3 y/o
# Filtering for Grade 9-
schooling <- c(16, 17, 20:24)
df <- df %>%
  filter(Education %in% schooling)
df$Education <- factor(df$Education, levels = c(16,17,20,21,22,23,24),
                       labels = c("HS_diploma", "GED", "Associate_Deg", "Bachelors", "Masters", "Prof_Deg", "Doctorate"))

# NA = less than 3 y/o, Pubsch = public school, Coll = Public college, PS = Private school, PC = Private college, HomeSC = homeschool 
df$School_enrollment <- factor(df$School_enrollment, levels = c(1,2,3),
                               labels = c("Notlast3mo", "PubSch/Coll", "PS/PC/HomeSc"))

# Filtering for people who are from black or white racial backgrounds
races <- c(1,2)
df <- df %>%
  filter(Race %in% races)
df$Race <- factor(df$Race, levels = c(1,2), labels = c("White", "Black"))

# Relabelling and factoring english speaking ability
df$Speaks_english <- factor(df$Speaks_english, levels = c(1:4), labels = c("Very well", "Well", "Not well", "Not at all"))

# relabelling Layoffs
df$Layoff <- factor(df$Layoff, levels = c(1:3), labels = c("Yes", "No", "Did not report"))

# natural = naturalization
df$Citizenship <- factor(df$Citizenship, levels = c(1:5), labels = c("Born in US", "US territories", "Born abroad US parents", "US by natural", "Not citizen"))

# Relabelling ST columns
df$State <- factor(df$State, levels = c(1,2,4,5,6,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,53,54,55,56,72), 
                   labels = c("Alabama", "Alaska", "Arizona", "Arkansas",
                              "California", "Colorado", "Connecticut",
                              "Delaware", "DC", "Florida", "Georgia",
                              "Hawaii", "Idaho", "Illinois", "Indiana",
                              "Iowa", "Kansas", "Kentucky", "Louisiana",
                              "Maine", "Maryland", "Massachusetts", 
                              "Michigan", "Minnesota", "Mississippi",
                              "Missouri", "Montana", "Nebraska", "Nevada", 
                              "New Hampshire", "New Jersey", "New Mexico", 
                              "New York", "North Carolina", "North Dakota", 
                              "Ohio", "Oklahoma", "Oregon", "Pennsylvania", 
                              "Rhode Island", "South Carolina", "South Dakota",
                              "Tennessee", "Texas", "Utah", "Vermont", 
                              "Virginia", "Washington", "West Virginia",
                              "Wisconsin", "Wyoming", "Puerto Rico"))

# Factoring/Relabelling Region9
df$USA_region9 <- factor(df$USA_region9, levels = c(1:10), labels = c("Puerto Rico", "New England", "Middle Atlantic", "East North Central", "West North Central", "South Atlantic", "East South Central", "West South Central", "Mountain", "Pacific"))

# Factoring/Relabelling Region5
df$Region5 <- factor(df$Region5, levels = c(1,2,3,4,9), labels = c("Northeast", "Midwest", "South", "West", "Puerto Rico"))

# Factoring/relabelling Worker_class
df$Worker_class <- factor(df$Worker_class, levels = c(1:9), labels = c("Private fpcbi", "Private nfptc", "Local gov emp", "State employee", "Federal employee", "Self employed", "Self employed 2", "Working without pay", "Unemployed"))

# Factoring/Relabelling Birth over the last 12 months.
df$Birth_12months <- factor(df$Birth_12months, levels = c(1,2), labels = c("Yes", "No"))

# Factoring/relabelling Insurance through company
df$Insurance_co <- factor(df$Insurance_co, levels = c(1,2), labels = c("Yes", "No"))

# # Factoring/Relabelling Insurance directly
df$Insurance_dir <- factor(df$Insurance_dir, levels = c(1,2), labels = c("Yes", "No"))

# # Factoring/Relabelling Employment status recode
df$Employment_status <- factor(df$Employment_status, levels = c(1:6), labels = c("Civillian", "Civillian2", "Unemployed", "Armed forces", "Armed forces2", "Not in LF"))

# Collapsing ESR factors
df$Employment_status2 <- fct_collapse(df$Employment_status,
                                      "Civillian" = c("Civillian", "Civillian2"),
                                      "Unemployed" = c("Unemployed"),
                                      "Armed forces" = c("Armed forces", "Armed forces2"),
                                      "Not in LF" = c("Not in LF"))
# Binning the worker class factor levels
df$Worker_class2 <- fct_collapse(df$Worker_class,
                                 "Private Employee" = c("Private fpcbi", "Private nfptc"),
                                 "Government Employee" = c("Local gov emp", "State employee", "Federal employee"),
                                 "Self employed" = c("Self employed", "Self employed 2"),
                                 "Working without pay" = c("Working without pay"),
                                 Unemployed = c("Unemployed"))

# Income adjustment
df <- df %>%
  mutate(Income = Total_income * (Income_adjustment / 1000000))
options(scipen=999)

# Income over the last 12 months adjustment
df <- df %>%
  mutate(Income_12_month = Income_12_months * (Income_adjustment / 1000000))

# Removing columns that are no longer needed 
df$Total_income <- NULL
df$Income_12_months <- NULL
df$Income_adjustment <- NULL
df$Employment_status <- NULL
df$Worker_class <- NULL

df = rename(df, Employment_status = Employment_status2, Worker_class = Worker_class2)


# SUMMARY TABLES
EducInc.tbl <- with(df, tapply(Income,
                               INDEX = list(Race, Education), FUN = mean))

kable(EducInc.tbl, format = "markdown")


# RACE

# Creating a graph for race
df %>%
  ggplot() +
  geom_bar(mapping = aes(x = Race, fill = Race, weight = Person_weights)) +
  scale_fill_brewer(palette = "Set1") +
  ggtitle("Population by race")

# Graph for gender by race and relative prop
df %>%
  filter(!is.na(Race)) %>%
  count(Race, Sex) %>%
  group_by(Race) %>%
  mutate(percent = (n / sum(n)) * 100) %>%
  ungroup() %>%
  ggplot(aes(x = Race, y = percent, fill = Sex)) +
  geom_bar(stat = "identity", position = "dodge") +
  scale_fill_brewer(palette = "Set1") +
  ylab("Percentage (%)") +
  ggtitle("Proportion of Race by Sex")

df %>%
  group_by(Sex, Race) %>%
  summarise(n = sum(Person_weights)) %>%
  group_by(Race) %>%
  mutate(percent = (n / sum(n) * 100)) %>%
  ggplot(aes(x = Race, y = percent, fill = Sex)) +
  geom_bar(stat = "identity", position = "dodge") +
  scale_fill_brewer(palette = "Set1") +
  ylab("Percentage (%)") +
  ggtitle("Proportion of Race by Sex")



# EDUCATION

# Graph for Education levels
ggplot(df) +
  geom_bar(mapping = aes(Education, fill = Education)) +
  scale_fill_brewer(palette = "Set1") +
  ggtitle("Comparing Levels of Education")

# Education by Race 
df %>%
  count(Race, Education) %>%
  group_by(Race) %>%
  mutate(percent = (n / sum(n)) * 100) %>%
  ungroup() %>%
  ggplot(aes(x = Education, y = percent, fill = Race)) +
  geom_bar(stat = "identity", position = "dodge") +
  scale_fill_brewer(palette = "Set1") +
  ggtitle("Comparing Education Based on Race") +
  ylab("Percentage (%)")

 # Education by Race
df %>%
  group_by(Education, Race) %>%
  summarise(n = sum(Person_weights)) %>%
  group_by(Race) %>%
  mutate(percent = (n / sum(n)) * 100) %>%
  ggplot(aes(x = reorder(Education, -percent), y = percent, fill = Race)) +
  geom_col(position = "dodge") +
  scale_fill_brewer(palette = "Set1") +
  xlab("Education by degree type") +
  ylab("Percentage (%)") +
  ggtitle("Comparing Education Based on Race")

# Average income for education by race 
df %>%
  group_by(Race, Education) %>%
  summarise(incomeaverage = weighted.mean(Income, Person_weights)) %>%
  ggplot(aes(x = reorder(Education, -incomeaverage), y = incomeaverage, fill = Race)) +
  geom_col(position = "dodge") +
  scale_fill_brewer(palette = "Set1") +
  xlab("Education") +
  ylab("Average Income (thousands)") +
  ggtitle("Comparing Annual Income Based on Education Level")


# INCOME
# Boxplot for Income by race
ggplot(df) +
  geom_histogram(aes(Income, weight = Person_weights), alpha = 0.5, bins = 30, fill = "red") +
  ggtitle("Total Income Distribution") +
  xlab("Income (1000s)")

# Filtering income greater than/less than 500k, and greater than/less than 250k
# Histogram
df %>%
  filter(Income > 500000) %>%
  ggplot() +
  geom_histogram(aes(Income, fill = Race, weight = Person_weights), alpha = 0.5) +
  scale_fill_brewer(palette = "Set1") +
  xlab("Income (1000s)") +
  ggtitle("Distribution of Income by Race greater than $500,000")

# Histogram
df %>%
  filter(Income < 250000) %>%
  ggplot() +
  geom_histogram(aes(Income, fill = Race, weight = Person_weights), alpha = 0.5) +
  scale_fill_brewer(palette = "Set1") +
  xlab("Income (1000s)") +
  ggtitle("Distribution of Income by Race up to $250,000")

# Boxplot
df %>%
  filter(Income < 250000) %>%
  ggplot(aes(x = Race, y = Income, fill = Race)) +
  geom_boxplot() +
  ggtitle("Income by Race under $250,000") +
  scale_fill_brewer(palette = "Set1")
  
# Boxplot
df %>%
  filter(Income > 500000) %>%
  ggplot(aes(x = Race, y = Income, fill = Race)) +
  geom_boxplot() +
  ggtitle("Income by Race $500,000+") +
  scale_fill_brewer(palette = "Set1")

# LAYOFF
# Graph for layoffs by race 
df %>%
  count(Race, Layoff) %>%
  group_by(Race) %>%
  mutate(percent = (n / sum(n) * 100)) %>%
  ggplot(aes(x = Layoff, y = percent, fill = Race)) +
  geom_bar(stat = "identity", position = "dodge") +
  scale_fill_brewer(palette = "Set1") +
  ggtitle("Comparing Layoffs by Race") +
  xlab("Layoffs") +
  ylab("Percent (%)")

df %>%
  group_by(Race, Layoff) %>%
  summarise(n = sum(Person_weights)) %>%
  group_by(Race) %>%
  mutate(percent = (n / sum(n)) * 100) %>%
  filter(Layoff == "Yes") %>%
  ggplot(aes(x = Layoff, y = percent, fill = Race)) +
  geom_bar(stat = "identity", position = "dodge") +
  scale_fill_brewer(palette = "Set1") +
  ggtitle("Comparing Layoffs by Race") +
  xlab("Layoffs") +
  ylab("Percent (%)")
 

# proportions of worker class by race
df %>%
  filter(!is.na(Worker_class)) %>%
  group_by(Worker_class, Race) %>%
  summarise(n = sum(Person_weights)) %>%
  group_by(Race) %>%
  mutate(percent = (n / sum(n)) * 100) %>%
  ggplot(aes(x = Worker_class, y = percent, fill = Race)) +
  geom_bar(stat = "identity", position = "dodge") +
  scale_fill_brewer(palette = "Set1") +
  xlab("Class of worker") +
  ylab("Percentage (%)") +
  ggtitle("Comparsion of Class of Worker by Race")

# Next 2 here are comparisons (government is slightly higher than priv. but still lower) and government hours are similar but pay less
# bargraph for private employees (race, income)
df %>%
  filter(Worker_class == "Private Employee") %>%
  group_by(Race) %>%
  summarise(incomeaverage = weighted.mean(Income, Person_weights)) %>%
  ggplot(aes(x = Race, y = incomeaverage, fill = Race)) +
  geom_col(position = "dodge") +
  scale_fill_brewer(palette = "Set1") +
  xlab("Race") +
  ylab("Income (1000s)") +
  ggtitle("Comparison of Annual Income by Race for Private Employees")

# bargraph for government employees (race, income)
df %>%
  filter(Worker_class == "Government Employee") %>%
  group_by(Race) %>%
  summarise(incomeaverage = weighted.mean(Income, Person_weights)) %>%
  ggplot(aes(x = Race, y = incomeaverage, fill = Race)) +
  geom_col(position = "dodge") +
  scale_fill_brewer(palette = "Set1") +
  xlab("Race") +
  ylab("Income (1000s)") +
  ggtitle("Comparison of Annual Income by Race for Government Jobs")

df %>%
  filter(Worker_class == "Private Employee") %>%
  group_by(Race, Hours_worked) %>%
  summarise(incomeaverage = weighted.mean(Income, Person_weights)) %>%
  ggplot(aes(x = Hours_worked, y = incomeaverage, color = Race)) +
  geom_point() +
  scale_color_manual(values = c("Red", "Blue")) +
  xlab("Hours") +
  ylab("Income (1000s)") +
  ggtitle("Annual Income by Hours Worked for Private Employees")

df %>%
  filter(Worker_class == "Government Employee") %>%
  group_by(Race, Hours_worked) %>%
  summarise(incomeaverage = weighted.mean(Income, Person_weights)) %>%
  ggplot(aes(x = Hours_worked, y = incomeaverage, color = Race)) +
  geom_point() +
  scale_color_manual(values = c("Red", "Blue")) +
  xlab("Hours") +
  ylab("Income (1000s)") +
ggtitle("Annual Income by Hours Worked for Government Jobs")


# HOURS WORKED
# Income vs hours worked by race
df %>%
  group_by(Race, Hours_worked) %>%
  summarise(averageincome = weighted.mean(Income, Person_weights)) %>%
  ggplot(aes(x = Hours_worked, y = averageincome, color = Race)) +
  geom_point() +
  scale_color_manual(values=c("red", "blue")) +
  ggtitle("Annual Income by Race for Hours Worked") +
  xlab("Hours") +
  ylab("Income (1000s)")

# Income vs hours worked by education
degrees <- c("HS_diploma", "Bachelors", "Masters", "Prof_Deg")
df %>%
  filter(Education %in% degrees) %>%
  group_by(Education, Hours_worked) %>%
  summarise(averageincome = weighted.mean(Income, Person_weights)) %>%
  ggplot(aes(x = Hours_worked, y = averageincome, color = Education)) +
  geom_point() +
  scale_color_manual(values = c("purple", "green", "blue", "red")) +
  ggtitle("Annual Income for Education Level for Hours Worked") +
  xlab("Hours") +
  ylab("Income (1000s)")

# income vs hours worked for high school by race 
hsdegree <- c("HS_diploma")
df %>%
  filter(Education %in% hsdegree) %>%
  group_by(Race, Hours_worked) %>%
  summarise(averageincome = weighted.mean(Income, Person_weights)) %>%
  ggplot(aes(x = Hours_worked, y = averageincome, color = Race)) +
  geom_point() +
  scale_color_manual(values = c("red", "blue")) +
  ggtitle("Annual Income by Hours Worked for High School Diplomas") +
  xlab("Hours") +
  ylab("Income (1000s)")

# income vs hours worked for bachelors by race 
bachelorsdeg <- c("Bachelors")
df %>%
  filter(Education %in% bachelorsdeg) %>%
  group_by(Race, Hours_worked) %>%
  summarise(averageincome = weighted.mean(Income, Person_weights)) %>%
  ggplot(aes(x = Hours_worked, y = averageincome, color = Race)) +
  geom_point() +
  scale_color_manual(values = c("red", "blue")) +
  ggtitle("Annual Income by Hours Worked for Bachelors Degree") +
  xlab("Hours") +
  ylab("Income (1000s)")

# income vs hours worked for prof.deg by race 
profdeg <- c("Prof_Deg")
df %>%
  filter(Education %in% profdeg) %>%
  group_by(Race, Hours_worked) %>%
  summarise(averageincome = weighted.mean(Income, Person_weights)) %>%
  ggplot(aes(x = Hours_worked, y = averageincome, color = Race)) +
  geom_point() +
  scale_color_manual(values = c("red", "blue")) +
  ggtitle("Annual Income by Hours Worked for Professional Degrees") +
  xlab("Hours") +
  ylab("Income (1000s)")

# Stacked plots to save space
df %>%
  filter(Education %in% degrees) %>%
  group_by(Race, Hours_worked, Education) %>%
  summarise(averageincome = weighted.mean(Income, Person_weights)) %>%
  ggplot(aes(x = Hours_worked, y = averageincome, color = Race)) +
  geom_point() +
  facet_grid(vars(Education), scales = "free") +
  scale_color_manual(values = c("red", "blue")) +
  ggtitle("Annual Income for Hours Worked by Education") +
  xlab("Hours") +
  ylab("Income (1000s)")


# EMPLOYMENT STATUS 
# graph for emp. status by race
df %>%
  filter(!is.na(Employment_status)) %>%
  count(Race, Employment_status) %>%
  group_by(Race) %>%
  mutate(percent = (n / sum(n)) * 100) %>%
  ungroup() %>%
  ggplot(aes(x = Employment_status, y = percent, fill = Race)) +
  geom_bar(stat = "identity", position = "dodge") +
  scale_fill_brewer(palette = "Set1")


# Graph for region by Race 
ggplot(df) +
  geom_bar(mapping = aes(Region5, fill = Race), position = "dodge") +
  scale_fill_brewer(palette = "Set1")

# bargraph for race by region5
df %>%
  group_by(Race, Region5) %>%
  summarise(incomeaverage = weighted.mean(Income, Person_weights)) %>%
  ggplot(aes(x = reorder(Region5, -incomeaverage), y = incomeaverage, fill = Race)) +
  geom_col(position = "dodge") +
  scale_fill_brewer(palette = "Set1") +
  xlab("Region") +
  ylab("Average Income (thousands)") +
  ggtitle("Comparing Annual Income Based on Region by Race")

# Commute time by race
df %>%
  filter(!is.na(Commute_time)) %>%
  group_by(Race) %>%
  ggplot(aes(x = Commute_time, fill = Race, color = Race, weight = Person_weights)) +
  geom_histogram(bins = 30) +
  scale_fill_brewer(palette = "Set1") +
  ggtitle("Comparison of Commute Time by Race") +
  xlab("Commute Time (minutes)")
```
